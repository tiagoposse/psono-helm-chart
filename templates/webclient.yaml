{{- if .Values.webclient.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "webclient.fullname" . }}
  labels:
    {{- include "webclient.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "webclient.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "webclient.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "webclient.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: webclient
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.webclient.image.repository }}:{{ .Values.webclient.image.tag }}"
          imagePullPolicy: {{ .Values.webclient.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.webclient.resources | nindent 12 }}
          {{- if .Values.webclient.env }}
          env:
            {{- range $key, $val := .Values.webclient.env }}
              - name: {{ $key | quote }}
                value: {{ $val | quote }}
            {{- end }}
            {{ if .Values.databaseSecret.enabled }}
              - name: PSONO_DATABASES_DEFAULT_USER
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.databaseSecret.name }}
                    key: {{ .Values.databaseSecret.usernameKey }}
              - name: PSONO_DATABASES_DEFAULT_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.databaseSecret.name }}
                    key: {{ .Values.databaseSecret.passwordKey }}
            {{ end }}
            {{- range .Values.server.extraSecretEnvironmentVars }}
              - name: {{ .envName }}
                valueFrom:
                  secretKeyRef:
                    name: {{ .secretName }}
                    key: {{ .secretKey }}
            {{- end }}
          {{- end }}
          {{- if .Values.webclient.extraVolumeMounts }}
          volumeMounts:
            {{ toYaml .Values.webclient.extraVolumeMounts | nindent 12 }}
          {{- end }}
      {{- with .Values.webclient.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.webclient.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.webclient.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.webclient.extraVolumes }}
      volumes:
        {{ toYaml .Values.webclient.extraVolumes | nindent 8}}
      {{- end }}
{{- end }}